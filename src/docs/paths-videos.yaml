components:
  schemas:
    Video:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        publicId:
          type: string
        secureUrl:
          type: string
          format: uri
        restaurantName:
          type: string
        phoneNumber:
          type: string
        network:
          type: string
          enum: [MTN, Syriatel]
        invoiceImage:
          type: string
          format: uri
        statusVideo:
          type: string
          enum: [pending, rejected, accepted]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - userId
        - publicId
        - secureUrl
        - restaurantName
        - phoneNumber
        - network
        - invoiceImage
        - statusVideo
        - createdAt
        - updatedAt

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
      required:
        - success
        - message

    VideosResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Videos retrieved successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/Video'
      required:
        - success
        - message
        - data

    PaginatedVideosResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Videos retrieved successfully
        data:
          type: object
          properties:
            videos:
              type: array
              items:
                $ref: '#/components/schemas/Video'
            pagination:
              type: object
              properties:
                nextCursor:
                  type: string
                  format: date-time
                  nullable: true
                  description: Cursor for the next page
                  example: "2024-01-15T10:30:00.000Z"
                hasMore:
                  type: boolean
                  description: Whether there are more videos to fetch
                  example: true
              required:
                - hasMore
          required:
            - videos
            - pagination
      required:
        - success
        - message
        - data

paths:
  /api/videos:
    post:
      summary: Create a new video
      tags:
        - Videos
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                publicId:
                  type: string
                  description: Public ID of the video
                  example: yum_gott/videos/yum_gott_1752456506674
                secureUrl:
                  type: string
                  format: uri
                  description: Secure URL of the video
                  example: https://res.cloudinary.com/dbipfyr2o/video/upload/v1752456506674/yum_gott/videos/yum_gott_1752456506674.mp4
                restaurantName:
                  type: string
                  description: Name of the restaurant
                  example: Falafel Ala Kefk
                phoneNumber:
                  type: string
                  description: Phone number associated with the video
                  example: '2054353'
                network:
                  type: string
                  enum: [MTN, Syriatel]
                  description: Network provider
                  example: MTN
                invoiceImage:
                  type: string
                  format: binary
                  description: Invoice image file (JPEG or PNG)
                  example: invoice.jpg
              required:
                - publicId
                - secureUrl
                - restaurantName
                - phoneNumber
                - network
                - invoiceImage
      responses:
        '201':
          description: Video created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Video created successfully
                  data:
                    $ref: '#/components/schemas/Video'
        '400':
          description: Bad request (validation error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden (only customers can create videos)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/{id}:
    put:
      summary: Update an existing video
      tags:
        - Videos
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: ID of the video to update
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                publicId:
                  type: string
                  description: Public ID of the video
                  example: yum_gott/videos/yum_gott_1752456506674
                secureUrl:
                  type: string
                  format: uri
                  description: Secure URL of the video
                  example: https://res.cloudinary.com/dbipfyr2o/video/upload/v1752456506674/yum_gott/videos/yum_gott_1752456506674.mp4
                restaurantName:
                  type: string
                  description: Name of the restaurant
                  example: Falafel Ala Kefk
                phoneNumber:
                  type: string
                  description: Phone number associated with the video
                  example: '2054353'
                network:
                  type: string
                  enum: [MTN, Syriatel]
                  description: Network provider
                  example: MTN
                invoiceImage:
                  type: string
                  format: binary
                  description: Invoice image file (JPEG or PNG, optional)
                  example: invoice.jpg
              required:
                - publicId
                - secureUrl
                - restaurantName
                - phoneNumber
                - network
      responses:
        '200':
          description: Video updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Video updated successfully
                  data:
                    $ref: '#/components/schemas/Video'
        '400':
          description: Bad request (validation error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden (only customers can update videos)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a video
      tags:
        - Videos
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: ID of the video to delete
      responses:
        '200':
          description: Video deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Video deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden (only customers can delete videos)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/customer/accepted:
    get:
      summary: Get all videos with accepted status (with pagination)
      tags:
        - Videos
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of videos to return per page
          example: 10
        - in: query
          name: cursor
          schema:
            type: string
            format: date-time
          description: Cursor for pagination (ISO 8601 date format)
          example: "2024-01-15T10:30:00.000Z"
      responses:
        '200':
          description: Accepted videos retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideosResponse'
        '400':
          description: Bad request (validation error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/accepted:
    get:
      summary: Get all accepted videos for the authenticated customer
      tags:
        - Videos
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Customer accepted videos retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Customer accepted videos retrieved successfully
                  data:
                    type: object
                    properties:
                      videos:
                        type: array
                        items:
                          $ref: '#/components/schemas/Video'
                    required:
                      - videos
                required:
                  - success
                  - message
                  - data
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (invalid or missing token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden (only customers can access their videos)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/feed:
    get:
      summary: Get video feed after user's last seen video
      tags:
        - Videos
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            type: string
          description: User's unique identifier
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 10
            maximum: 50
          description: Number of videos to return
        - in: query
          name: cursor
          required: false
          schema:
            type: string
          description: Pagination cursor for next page
      responses:
        '200':
          description: List of videos after last seen
          content:
            application/json:
              schema:
                type: object
                properties:
                  videos:
                    type: array
                    items:
                      $ref: '#/components/schemas/Video'
                  next_cursor:
                    type: string
                  has_more:
                    type: boolean
        '400':
          description: Bad request
        '404':
          description: User not found

  /api/videos/update-position:
    post:
      summary: Update user's last seen video
      tags:
        - Videos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                last_video_id:
                  type: string
              required:
                - user_id
                - last_video_id
      responses:
        '200':
          description: Position updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Bad request
        '404':
          description: User or video not found
