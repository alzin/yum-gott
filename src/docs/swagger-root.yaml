openapi: 3.0.3
info:
  title: Yum-Gott Platform API
  description: API for the Yum-Gott platform, supporting customer and restaurant owner authentication, profile management, product management, and category management.
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://production-server-yumgott-30534781840.europe-west1.run.app
    description: Production server
  - url: https://yum-gott.onrender.com
    description: Development server
  - url: https://production-server-yumgott.onrender.com
    description: Production server

# Paths
paths:
  # Include paths from paths-auth-health.yaml
  /health:
    $ref: './paths-auth-health.yaml#/paths/~1health'
  /api/auth/register/customer:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1register~1customer'
  /api/auth/register/restaurant-owner:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1register~1restaurant-owner'
  /api/auth/login/customer:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1login~1customer'
  /api/auth/login/restaurant-owner:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1login~1restaurant-owner'
  /api/auth/login/guest:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1login~1guest'
  /api/auth/verify:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1verify'
  /api/auth/profile/customer:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1profile~1customer'
  /api/auth/profile/restaurant-owner:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1profile~1restaurant-owner'
  /api/auth/profile/image:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1profile~1image'
  /api/auth/location/restaurant:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1location~1restaurant'
  /api/auth/refresh-token:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1refresh-token'
  /api/auth/logout:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1logout'
  /api/auth/change-password:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1change-password'
  /api/auth/account/customer:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1account~1customer'
  /api/auth/account/restaurant-owner:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1account~1restaurant-owner'
  /api/auth/otp/request:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1otp~1request'
  /api/auth/otp/verify:
    $ref: './paths-auth-health.yaml#/paths/~1api~1auth~1otp~1verify'
  # Include paths from paths-products-categories.yaml

  /api/products:
    $ref: './paths-products-categories.yaml#/paths/~1api~1products'
  /api/products/restaurant:
    $ref: './paths-products-categories.yaml#/paths/~1api~1products~1restaurant'
  /api/products/{id}:
    $ref: './paths-products-categories.yaml#/paths/~1api~1products~1{id}'
  /api/products/{productId}/options:
    $ref: './paths-products-categories.yaml#/paths/~1api~1products~1{productId}~1options'
  /api/products/options/{optionId}:
    $ref: './paths-products-categories.yaml#/paths/~1api~1products~1options~1{optionId}'
  /api/products/option-values/{valueId}:
    $ref: './paths-products-categories.yaml#/paths/~1api~1products~1option-values~1{valueId}'
  /api/products/options/{optionId}/values:
    $ref: './paths-products-categories.yaml#/paths/~1api~1products~1options~1{optionId}~1values'
  /api/categories:
    $ref: './paths-products-categories.yaml#/paths/~1api~1categories'
  /api/categories/restaurant:
    $ref: './paths-products-categories.yaml#/paths/~1api~1categories~1restaurant'
  /api/opening-hours:
    $ref: './paths-opening-hours.yaml#/paths/~1api~1opening-hours'
  /api/opening-hours/restaurant:
    $ref: './paths-opening-hours.yaml#/paths/~1api~1opening-hours~1restaurant'
  /api/opening-hours/{id}:
    $ref: './paths-opening-hours.yaml#/paths/~1api~1opening-hours~1{id}'
  /api/videos:
    $ref: './paths-videos.yaml#/paths/~1api~1videos'
  /api/videos/{id}:
    $ref: './paths-videos.yaml#/paths/~1api~1videos~1{id}'
  /api/videos/accepted:
    $ref: './paths-videos.yaml#/paths/~1api~1videos~1accepted'
  /api/videos/customer/accepted:
    $ref: './paths-videos.yaml#/paths/~1api~1videos~1customer~1accepted'
  /api/videos/feed:
    $ref: './paths-videos.yaml#/paths/~1api~1videos~1feed'
  /api/videos/update-position:
    $ref: './paths-videos.yaml#/paths/~1api~1videos~1update-position'
  # Include paths from paths-comments-likes.yaml
  /api/comments:
    $ref: './paths-comments-likes.yaml#/paths/~1api~1comments'
  /api/comments/video/{videoId}:
    $ref: './paths-comments-likes.yaml#/paths/~1api~1comments~1video~1{videoId}'
  /api/comments/{id}:
    $ref: './paths-comments-likes.yaml#/paths/~1api~1comments~1{id}'
  /api/likes/toggle:
    $ref: './paths-comments-likes.yaml#/paths/~1api~1likes~1toggle'
  /api/likes/video/{videoId}:
    $ref: './paths-comments-likes.yaml#/paths/~1api~1likes~1video~1{videoId}'
  /api/payGate:
    get:
      tags:
        - PayGate
      summary: List active pay gates
      description: Returns all active payment gateways as an array of strings.
      operationId: listPayGates
      responses:
        '200':
          description: Active pay gates retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Active pay gates
                  data:
                    type: array
                    items:
                      type: string
                      example: "PAYMENT_X"
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/orders:
    $ref: './paths-orders.yaml#/paths/~1orders'
  /api/orders/{orderId}:
    $ref: './paths-orders.yaml#/paths/~1orders~1{orderId}'
  /api/orders/{orderId}/status:
    $ref: './paths-orders.yaml#/paths/~1orders~1{orderId}~1status'

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: accessToken
  schemas:
    RegisterCustomerRequest:
      type: object
      properties:
        name:
          type: string
          example: "Ahmed Mohamed"
        email:
          type: string
          example: "ahmed@example.com"
        mobileNumber:
          type: string
          example: "01234567890"
        password:
          type: string
          example: "SecurePass123"
      required:
        - name
        - email
        - mobileNumber
        - password
    RegisterRestaurantOwnerRequest:
      type: object
      properties:
        restaurantName:
          type: string
          example: "Tasty Bites"
        organizationNumber:
          type: string
          example: "01234ORG567"
        email:
          type: string
          example: "owner@example.com"
        mobileNumber:
          type: string
          example: "01234567890"
        password:
          type: string
          example: "SecurePass123"
      required:
        - restaurantName
        - organizationNumber
        - email
        - mobileNumber
        - password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: "user@example.com"
        password:
          type: string
          example: "SecurePass123"
      required:
        - email
        - password
    UpdateRestaurantLocationRequest:
      type: object
      properties:
        address:
          type: string
          example: "123 Main St, Cairo"
        latitude:
          type: number
          example: 30.0444
        longitude:
          type: number
          example: 31.2357
      required:
        - address
        - latitude
        - longitude
    ChangePasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
          minLength: 6
          example: "CurrentP@ss1"
        newPassword:
          type: string
          minLength: 6
          description: Must contain at least one lowercase letter, one uppercase letter, and one number
          example: "NewP@ssw0rd1"
        confirmPassword:
          type: string
          minLength: 6
          example: "NewP@ssw0rd1"
      required:
        - oldPassword
        - newPassword
        - confirmPassword
    RestaurantOwner:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        restaurantName:
          type: string
          example: "Tasty Bites"
        organizationNumber:
          type: string
          example: "01234ORG567"
        email:
          type: string
          example: "owner@example.com"
        mobileNumber:
          type: string
          example: "01234567890"
        isEmailVerified:
          type: boolean
          example: true
        address:
          type: string
          example: "123 Main St, Cairo"
        latitude:
          type: number
          example: 30.0444
        longitude:
          type: number
          example: 31.2357
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
    AuthToken:
      type: object
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expiresIn:
          type: number
          example: 86400
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Main Dishes"
        restaurantId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Chicken Shawarma"
        description:
          type: string
          example: "Delicious chicken shawarma with garlic sauce"
        price:
          type: number
          example: 50
        discount:
          type: number
          example: 10
        imageUrl:
          type: string
          example: "https://example.com/image.jpg"
        categoryId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        restaurantId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
    CreateCategoryRequest:
      type: object
      properties:
        name:
          type: string
          example: "Main Dishes"
      required:
        - name
    CreateProductRequest:
      type: object
      properties:
        categoryName:
          type: string
          example: "Main Dishes"
        productName:
          type: string
          example: "Chicken Shawarma"
        description:
          type: string
          example: "Delicious chicken shawarma with garlic sauce"
        price:
          type: number
          example: 50
        discount:
          type: number
          example: 10
        sizeOptions:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                enum: ["Small", "Medium", "Large"]
              additionalPrice:
                type: number
                example: 0
        image:
          type: string
          format: binary
        options:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "Toppings"
              required:
                type: boolean
                example: false
              values:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Extra Cheese"
                    additionalPrice:
                      type: number
                      example: 5
      required:
        - categoryName
        - productName
        - description
        - price
        - image
    UpdateProductRequest:
      type: object
      properties:
        categoryName:
          type: string
          example: "Main Dishes"
        productName:
          type: string
          example: "Chicken Shawarma"
        description:
          type: string
          example: "Updated description"
        price:
          type: number
          example: 55
        discount:
          type: number
          example: 15
        sizeOptions:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                enum: ["Small", "Medium", "Large"]
              additionalPrice:
                type: number
                example: 0
        image:
          type: string
          format: binary
        options:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "Toppings"
              required:
                type: boolean
                example: false
              values:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Extra Cheese"
                    additionalPrice:
                      type: number
                      example: 5
      required:
        - categoryName
        - productName
        - description
        - price
        - image
    ProductOption:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Toppings"
        required:
          type: boolean
          example: false
        productId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
    ProductOptionValue:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Extra Cheese"
        additionalPrice:
          type: number
          example: 5
        optionId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
    CreateProductOptionRequest:
      type: object
      properties:
        name:
          type: string
          example: "Toppings"
        required:
          type: boolean
          example: false
      required:
        - name
        - required
    CreateProductOptionValueRequest:
      type: object
      properties:
        name:
          type: string
          example: "Extra Cheese"
        additionalPrice:
          type: number
          example: 5
      required:
        - name
        - additionalPrice
    CustomerResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Ahmed Mohamed"
        email:
          type: string
          example: "ahmed@example.com"
        mobileNumber:
          type: string
          example: "01234567890"
        isEmailVerified:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"

    RestaurantOwnerResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        restaurantName:
          type: string
          example: "Tasty Bites"
        organizationNumber:
          type: string
          example: "01234ORG567"
        email:
          type: string
          example: "owner@example.com"
        mobileNumber:
          type: string
          example: "01234567890"
        isEmailVerified:
          type: boolean
          example: true
        address:
          type: string
          example: "123 Main St, Cairo"
        latitude:
          type: number
          example: 30.0444
        longitude:
          type: number
          example: 31.2357
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"

    ProductResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Chicken Shawarma"
        description:
          type: string
          example: "Delicious chicken shawarma with garlic sauce"
        price:
          type: number
          example: 50
        discount:
          type: number
          example: 10
        imageUrl:
          type: string
          example: "https://example.com/image.jpg"
        categoryId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        restaurantId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        categoryName:
          type: string
          example: "Main Dishes"
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionWithValue'
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"

    ProductOptionWithValue:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Toppings"
        required:
          type: boolean
          example: false
        productId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        values:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionValue'
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
    Comment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        content:
          type: string
          example: "Great video! The food looks delicious."
        videoId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        userId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        userType:
          type: string
          enum: [customer, restaurant_owner]
          example: "customer"
        userName:
          type: string
          description: Display name of the commenter (customer name or restaurant name)
          example: "John Doe"
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
      required:
        - id
        - content
        - videoId
        - userId
        - userType
        - createdAt
        - updatedAt
    Like:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        videoId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        userId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        userType:
          type: string
          enum: [customer, restaurant_owner]
          example: "customer"
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
      required:
        - id
        - videoId
        - userId
        - userType
        - createdAt
    PayGate:
      type: object
      properties:
        gateName:
          type: string
          example: PAYMENT_X
      required:
        - gateName
    CreateCommentRequest:
      type: object
      properties:
        videoId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        content:
          type: string
          example: "Great video! The food looks delicious."
      required:
        - videoId
        - content
    ToggleLikeRequest:
      type: object
      properties:
        videoId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
      required:
        - videoId
    Video:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        userId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        publicId:
          type: string
          example: "video_123"
        secureUrl:
          type: string
          format: uri
          example: "https://example.com/video.mp4"
        restaurantName:
          type: string
          example: "Tasty Bites"
        phoneNumber:
          type: string
          example: "01234567890"
        network:
          type: string
          enum: [MTN, Syriatel]
          example: "MTN"
        invoiceImage:
          type: string
          format: uri
          example: "https://example.com/invoice.jpg"
        statusVideo:
          type: string
          enum: [pending, rejected, accepted]
          example: "accepted"
        likesCount:
          type: integer
          description: Number of likes on the video
          example: 42
        createdAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
      required:
        - id
        - userId
        - publicId
        - secureUrl
        - restaurantName
        - phoneNumber
        - network
        - invoiceImage
        - statusVideo
        - likesCount
        - createdAt
        - updatedAt
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "An error occurred"
      required:
        - success
        - message
    VideosResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Videos retrieved successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/Video'
      required:
        - success
        - message
        - data
    PaginatedVideosResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Videos retrieved successfully
        data:
          type: object
          properties:
            videos:
              type: array
              items:
                $ref: '#/components/schemas/Video'
            pagination:
              type: object
              properties:
                nextCursor:
                  type: string
                  format: date-time
                  nullable: true
                  description: Cursor for the next page
                  example: "2024-01-15T10:30:00.000Z"
                hasMore:
                  type: boolean
                  description: Whether there are more videos to fetch
                  example: true
              required:
                - hasMore
          required:
            - videos
            - pagination
      required:
        - success
        - message
        - data
  responses:
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Bad request"
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Unauthorized"
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Forbidden"
    NotFoundError:
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Not found"
    TooManyRequestsError:
      description: Too many requests
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Too many requests, please try again later"
              retryAfter:
                type: number
                description: "Number of seconds to wait before making another request"
                example: 60
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Internal server error"